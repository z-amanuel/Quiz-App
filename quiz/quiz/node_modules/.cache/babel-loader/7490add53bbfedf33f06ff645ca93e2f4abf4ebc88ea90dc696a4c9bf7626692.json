{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nexport default function Timer({\n  setStop,\n  questionNumber\n}) {\n  _s();\n  const [timer, setTimer] = useState(3);\n  useEffect(() => {\n    if (timer === 0) return setStop(true);\n    const interval = setInterval(() => {\n      setTimer(prev => prev - 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [setStop, timer]);\n  useEffect(() => {\n    setTimer(3);\n  }, [questionNumber]);\n  return timer;\n}\n_s(Timer, \"+gyr2CQgS/sf2kNnIsty+0WkE4s=\");\n_c = Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["useEffect","useState","Timer","setStop","questionNumber","_s","timer","setTimer","interval","setInterval","prev","clearInterval","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/quiz/quiz/src/Components/Timer.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\n\r\nexport default function Timer( {setStop, questionNumber}) {\r\n    const [timer, setTimer] = useState(3);\r\n\r\n    useEffect(()=>{\r\n        if(timer === 0) return setStop(true)\r\n        const interval = setInterval(()=>{\r\n            setTimer((prev) => prev -1);\r\n\r\n        },1000)\r\n        return () => clearInterval(interval)\r\n    },[setStop, timer])\r\n    useEffect(()=>{\r\n        setTimer(3)\r\n\r\n    }, [questionNumber])\r\n  return timer;\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,eAAe,SAASC,KAAKA,CAAE;EAACC,OAAO;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EACtD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAErCD,SAAS,CAAC,MAAI;IACV,IAAGM,KAAK,KAAK,CAAC,EAAE,OAAOH,OAAO,CAAC,IAAI,CAAC;IACpC,MAAMK,QAAQ,GAAGC,WAAW,CAAC,MAAI;MAC7BF,QAAQ,CAAEG,IAAI,IAAKA,IAAI,GAAE,CAAC,CAAC;IAE/B,CAAC,EAAC,IAAI,CAAC;IACP,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;EACxC,CAAC,EAAC,CAACL,OAAO,EAAEG,KAAK,CAAC,CAAC;EACnBN,SAAS,CAAC,MAAI;IACVO,QAAQ,CAAC,CAAC,CAAC;EAEf,CAAC,EAAE,CAACH,cAAc,CAAC,CAAC;EACtB,OAAOE,KAAK;AACd;AAACD,EAAA,CAhBuBH,KAAK;AAAAU,EAAA,GAALV,KAAK;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}